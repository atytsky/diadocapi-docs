GetDocument
===========

.. http:get:: /V3/GetDocument

	:queryparam boxId: идентификатор :doc:`ящика <../entities/box>` организации.
	:queryparam messageId: идентификатор сообщения, содержащего искомый документ.
	:queryparam entityId: идентификатор сущности типа ``LetterAttachment`` внутри сообщения ``messageId``, представляющей искомый документ.
	:queryparam injectEntityContent: параметр, указывающий нужно ли возвращать содержимое документа. Если имеет значение ``true``, то содержимое документа будет добавлено в поле ответа ``Content.Data``. Необязательный параметр, по умолчанию равен ``true``.
	
	:requestheader Authorization: данные, необходимые для :doc:`авторизации <../Authorization>`.
	
	:statuscode 200: операция успешно завершена.
	:statuscode 400: данные в запросе имеют неверный формат или отсутствуют обязательные параметры.
	:statuscode 401: в запросе отсутствует HTTP-заголовок ``Authorization`` или в этом заголовке содержатся некорректные авторизационные данные.
	:statuscode 402: у организации с указанным идентификатором ``boxId`` закончилась подписка на API.
	:statuscode 403: доступ к ящику с предоставленным авторизационным токеном запрещен.
	:statuscode 404: в указанном ящике не найдено сообщение с идентификатором ``messageId`` или в указанном сообщении нет сущности типа ``LetterAttachment`` с идентификатором ``entityId``.
	:statuscode 405: используется неподходящий HTTP-метод.
	:statuscode 500: при обработке запроса возникла непредвиденная ошибка.
	
	:response Body: Тело ответа содержит информацию о документе ``entityId`` из сообщения ``messageId`` в ящике ``boxId``, представленную структурой :doc:`../proto/Document`.

Содержимое документа содержится в поле :doc:`Document.Content <../proto/Content>`. Формат содержимого зависит от типа документа; форматы описаны на странице :doc:`Entity <../proto/Entity message>`.

Метод имеет ограничение на размер содержимого документа, хранящегося в поле ``Content.Data``, — он не должен превышать 1048576 байт. Если размер содержимого документа превышает это значение, то оно не будет включено в ответ независимо от значения параметра ``injectEntityContent``. Вы можете получить такое бинарное представление с помощью метода :doc:`GetEntityContent`.

Для выполнения метода текущий пользователь должен иметь доступ к запрашиваемому документу, иначе метод вернет ошибку ``403 (Forbidden)``.