Служебные документы
===================

.. contents:: :local:

Диадок позволяет сгенерировать следующие ответные документы:

	- извещение о получении (ИоП),
	- предложение об аннулировании,
	- отказ от подписи,
	- отказ от предложения об аннулировании,
	- уведомление об уточнении счета-фактуры (УоУ).

Эти документы можно отправить с помощью метода :doc:`../http/PostMessagePatch`.

Извещение о получении
---------------------

Возможность отправки ИоП задается в свойствах :doc:`вида документооборота <../docflows/Workflows>`.

Сгенерировать извещение о получении можно с помощью метода :doc:`../http/GenerateReceiptXml`. В ответе метод вернет сформированный XML-файл извещения.

Предложение об аннулировании
----------------------------

Если вы обнаружили ошибки в отправленном документе, его можно аннулировать. Для этого сгенерируйте и отправьте предложение об аннулировании. 

Сгенерировать предложение об аннулировании можно с помощью метода :doc:`../http/GenerateRevocationRequestXml`. Можно отправить предложение об аннулировании форматов 1.01 и 1.02. В ответе метод вернет сформированный XML-файл предложения об аннулировании.

Отказ от подписи и отказ от предложения об аннулировании
--------------------------------------------------------

Сгенерировать отказ можно с помощью метода :doc:`../http/GenerateSignatureRejectionXml`. В ответе метод вернет сформированный XML-файл отказа.

Уведомление об уточнении счета-фактуры
--------------------------------------

Чтобы создать запрос на исправление или корректировку счета-фактуры, сгенерируйте и отправьте уведомление об уточнении.

Сгенерировать уведомление об уточнении можно с помощью метода :doc:`../http/GenerateInvoiceCorrectionRequestXml`. В ответе метод вернет сформированный XML-файл уведомления.

.. _universal_signer:

Универсальный подписант
-----------------------

При генерации извещения о получении, отказа от подписи и уведомления об уточнении нужно передавать бинарное представление xml-файла универсального подписанта в поле ``SignerContent``. Файл необходимо сформировать в соответствии с :download:`XSD-схемой <../xsd/TechnologicalSigner133UserContract1505.xsd>`.

Пример xml-файла универсального подписанта:

::

    <?xml version="1.0" encoding="UTF-8"?>
    <Signer SignerStatus="2" SignatureType="1">
        <Certificate CertificateBytes="PD94bWwgdmVyc2l..."/>
        <Fio LastName="Петров" FirstName="Петр" MiddleName="Петрович"/>
        <Position PositionSource="Manual">Подписант-Должн</Position>
        <PowerOfAttorney>
        <Electronic MethodOfProviding="1">
            <Manual RegistrationNumber="4a743152-e772-4249-9a47-e2e290258e79" RegistrationDate="17.09.2018" InternalNumber="123" InternalDate="18.09.2018" SystemId="СвДоверЭл-ИдСистХран"/>
        </Electronic>
        </PowerOfAttorney>
    </Signer>

- ``SignerStatus`` — статус подписанта, может принимать значения:

	- 1 — лицо, имеющее полномочия на подписание документа без доверенности,
	- 2 — лицо, имеющее полномочия на подписание документа на основании доверенности в электронной форме,
	- 3 — лицо, имеющее полномочия на подписание документа на основании доверенности на бумажном носителе.

- ``SignatureType`` — тип подписи, может принимать значения:

	- 1 — усиленная квалифицированная электронная подпись,
	- 2 — простая электронная подпись,
	- 3 — усиленная неквалифицированная электронная подпись.

- ``Certificate`` — данные сертификата подписанта. Обязательное поле. Можно передать:

	- ``CertificateThumbprint`` — отпечаток сертификата,
	- ``CertificateBytes`` — сертификат, сериализованный в массив байтов в DER-кодировке.

- ``Fio`` — фамилия, имя, отчество подписанта.

	- ``LastName`` — фамилия подписанта, обязательное поле,
	- ``FirstName`` — имя подписанта, обязательное поле,
	- ``MiddleName`` — отчество подписанта.

- ``Position`` — должность подписанта.
- ``PositionSource`` — способ заполнения должности сотрудника. Обязательное поле. Может принимать значения:

	- ``Employee`` — заполнение из данных сотрудника в Диадоке,
	- ``Certificate`` — заполнение из данных в сертификате,
	- ``Manual`` — ручное заполнение данных.

- ``PowerOfAttorney`` — сведения о машиночитаемой доверенности. Доверенность может быть электронной или бумажной.

	- ``Electronic`` — электронная доверенность. Данные доверенности можно заполнить автоматически или вручную.

			- ``MethodOfProviding`` — способ представления доверенности. Обязательное поле. Может принимать значения:

			- 1 — представление доверенности осуществляется посредством ее включения в пакет электронных документов,
			- 2 — представление доверенности способом, не предусматривающим его включение в пакет электронных документов.

		- ``Storage`` — автоматическое заполнение информации по доверенности на основе номера и ИНН:

			- ``RegistrationNumber`` — номер доверенности, обязательное поле,
			- ``IssuerInn`` — ИНН организации, выдавшей доверенность, обязательное поле,
			- ``UseDefault`` — флаг, указывающий, нужно ли автоматически заполнить информацию на основе доверенности, используемой сотрудником по умолчанию. Обязательное поле.

		- ``Manual`` — ручное заполнение данных доверенности. Можно указать следующие данные:

			- ``RegistrationNumber`` — номер доверенности, обязательное поле,
			- ``RegistrationDate`` — дата совершения (выдачи) доверенности, обязательное поле,
			- ``InternalNumber`` — внутренний регистрационный номер доверенности,
			- ``InternalDate`` — дата внутренней регистрации доверенности,
			- ``SystemId`` — идентифицирующая информация об информационной системе, в которой осуществляется хранение доверенности.

	- ``Paper`` — бумажная доверенность. Можно указать следующие данные:

		- ``Fio`` — фамилия, имя, отчество (при наличии) лица, подписавшего доверенность,
		- ``InternalNumber`` — внутренний регистрационный номер доверенности, обязательное поле,
		- ``RegistrationDate`` — дата совершения (выдачи) доверенности, обязательное поле,
		- ``IssuerInfo`` — сведения о доверителе.

Пример запроса на генерацию извещения о получении:

::

    POST /V2/GenerateReceiptXml?boxId=74ef3a00-c625-4ef0-9b50-65bf7f96b9ae HTTP/1.1
    Host: diadoc-api-staging.kontur.ru
    Accept: application/json
    Content-Type: application/json charset=utf-8
    Authorization: DiadocAuth ddauth_api_client_id={{ключ разработчика}}, ddauth_token={{авторизационный токен}}

Пример тела запроса: 

::

    {
    "MessageId": "d83f2747-54a0-49cf-98eb-5fdcee07f90e",
    "AttachmentId": "25cb639e-d074-42f8-afe5-aa3f1e38c13b",
    "SignerContent": "PD94bWwgdm..."
    }

Пример ответа метода :doc:`../http/GenerateReceiptXml`:

::

  <?xml version="1.0" encoding="windows-1251"?>
  <Файл ИдФайл="DP_IZVPOL_2BM-9616675014-961601000-201906250926373816603_2BM-7770357771-2012082810454029703720000000000_20230904_54c96f37-a745-4e02-8dda-41404992952f" ВерсПрог="Diadoc 1.0" ВерсФорм="1.03">
    <Документ КНД="1115110">
      <УчастЭДО ИдУчастЭДО="2BM-7770357771-2012082810454029703720000000000">
        <ЮЛ НаимОрг="ОАО" ИННЮЛ="7770357771" КПП="770101001" />
      </УчастЭДО>
      <СвИзвПолуч ДатаПол="04.09.2023" ВремяПол="13.32.26">
        <СведПолФайл ИмяПолФайла="ON_NSCHFDOPPR_2BM-7770357771-2012082810454029703720000000000_2BM-9616675014-961601000-201906250926373816603_20200826_6efc7ad3-88ff-485d-86bb-c84c2262caf2">
          <ЭППолФайл>MIINB3RI=...</ЭППолФайл>
        </СведПолФайл>
      </СвИзвПолуч>
      <ОтпрДок ИдУчастЭДО="2BM-9616675014-961601000-201906250926373816603">
        <ЮЛ НаимОрг="ООО" ИННЮЛ="9616675014" КПП="961601000" />
      </ОтпрДок>
      <Подписант ТипПодпис="1" СтатПодп="2" Должн="Подписант-Должн">
        <ФИО Фамилия="Петров" Имя="Петр" Отчество="Петрович" />
        <СвДоверЭл СпособПредставл="1" НомДовер="4a743152-e772-4249-9a47-e2e290258e79" ДатаВыдДовер="17.09.2018" ВнНомДовер="123" ДатаВнРегДовер="18.09.2018" ИдСистХран="СвДоверЭл-ИдСистХран" />
      </Подписант>
    </Документ>
  </Файл>



