Служебные документы
===================

.. contents:: :local:
	:depth: 3


Получение служебных документов
------------------------------

.. _service_get_InvoiceConfirmation:

Получение подтверждения оператора
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

После отправки титула продавца Диадок автоматически формирует подтверждение оператора о дате получения документа. Получить подтверждение оператора можно с помощью метода :doc:`../http/GetMessage`. В запросе нужно передать идентификаторы ящика, сообщения и отправленного титула продавца.

В ответе метод вернет структуру :doc:`../proto/Message` с вложенной структурой :doc:`../proto/Entity`. Подтверждение оператора будет представлено структурой ``Entity`` со следующими полями:

	- ``EntityType = Attachment``,
	- ``AttachmentType = InvoiceConfirmation``.

**Пример HTTP-запроса:**

.. code-block:: http

	GET /V5/GetMessage?boxId=db32772b-9256-49a8-a133-fda593fda38a&messageId=bbcedb0d-ce34-4e0d-b321-3f600c920935entityId=30cf2c07-7297-4d48-bc6f-ca7a80e2cf95 HTTP/1.1
	Host: diadoc-api.kontur.ru
	Accept: application/json
	Content-Type: application/json charset=utf-8
	Authorization: DiadocAuth ddauth_api_client_id={{ключ разработчика}}, ddauth_token={{авторизационный токен}}


.. _service_get_InvoiceReceipt:

Получение извещения о получении
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

После получения титула продавца покупатель формирует извещение о получении титула и отправляет его продавцу. Получить извещение о получении можно с помощью метода :doc:`../http/GetMessage`. В запросе нужно передать идентификаторы ящика, сообщения и отправленного титула покупателя.

В ответе метод вернет структуру :doc:`../proto/Message` с вложенной структурой :doc:`../proto/Entity`. Подтверждение оператора будет представлено структурой ``Entity`` со следующими полями:

	- ``EntityType = Attachment``,
	- ``AttachmentType = InvoiceReceipt``.


Генерация и отправка служебных документов
-----------------------------------------

Диадок позволяет сгенерировать следующие служебные ответные документы:

	- извещение о получении (ИоП),
	- предложение об аннулировании,
	- отказ от подписи,
	- отказ от предложения об аннулировании,
	- уведомление об уточнении счета-фактуры (УоУ).

Эти документы можно отправить с помощью метода :doc:`../http/PostMessagePatch`, передав ему на вход структуру :doc:`../proto/MessagePatchToPost` с соответствующим заполненным полем.


.. _service_send_InvoiceReceipt:

Извещение о получении
~~~~~~~~~~~~~~~~~~~~~

Возможность отправки ИоП для каждого типа документа задается в свойствах :doc:`вида документооборота <../docflows/Workflows>`.

Сформировать ИоП можно с помощью метода :doc:`../http/GenerateReceiptXml`. В запросе нужно передать идентификаторы ящика, сообщения и полученного титула продавца.

**Пример HTTP-запроса на формирование ИоП:**

.. code-block:: http

	GET V2/GenerateReceiptXml?boxid=db32772b-9256-49a8-a133-fda593fda38a HTTP/1.1
	Host: diadoc-api.kontur.ru
	Accept: application/json
	Content-Type: application/json charset=utf-8
	Authorization: DiadocAuth ddauth_api_client_id={{ключ разработчика}}, ddauth_token={{авторизационный токен}}

**Пример тела запроса:**

.. code-block:: json

	{
		"MessageId": "bbcedb0d-ce34-4e0d-b321-3f600c920935",
		"AttachmentId": "30cf2c07-7297-4d48-bc6f-ca7a80e2cf95",
		"SignerContent": "PD94bWwgdmVyc2l...LDQudC7Pg==",        // бинарное представление XML-файла универсального подписанта
	}

В ответе метод вернет XML-файл ИоПа для сущности ``attachmentId`` из сообщения ``messageId`` в ящике ``boxId``.

Сформированное извещение о получении документа можно отправить с помощью метода :doc:`../http/PostMessagePatch`.

В теле запроса метода передайте структуру :doc:`../proto/MessagePatchToPost`, заполненную следующими данными:

	- ``BoxId`` — идентификатор ящика, в котором находится исходное сообщение;
	- ``MessageId`` — идентификатор сообщения, к которому относится дополнение;
	- ``Receipts`` — вложенная структура для передачи XML-файла ИоП:

		- ``ParentEntityId`` — идентификатор титула продавца;
		- ``SignedContent.Content`` — XML-файл ИоП;
		- ``SignedContent.Signature`` — файл подписи,
		- ``Labels`` — :doc:`метки <../entities/label>` (необязательно).

**Пример тела запроса:**

.. code-block:: json

	"BoxId": "db32772b-9256-49a8-a133-fda593fda38a",
	"MessageId": "bbcedb0d-ce34-4e0d-b321-3f600c920935",
	"Receipts":
	[
		{
			"ParentEntityId":"30cf2c07-7297-4d48-bc6f-ca7a80e2cf95&",
			"SignedContent":
			{
				"Content": "PD94bWwgdmVyc2l...LDQudC7Pg==",        //контент xml-файла в кодировке base-64
				"Signature": "MIIN5QYJKoZIhvc...KsTM6zixgz"        //контент файла подписи в кодировке base-64
			},
			"Label": "text"
		}
	]


Предложение об аннулировании
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Если вы обнаружили ошибки в отправленном документе, его можно аннулировать. Для этого сгенерируйте и отправьте предложение об аннулировании. 

Сгенерировать предложение об аннулировании можно с помощью метода :doc:`../http/GenerateRevocationRequestXml`. Можно отправить предложение об аннулировании форматов 1.01 и 1.02. В ответе метод вернет сформированный XML-файл предложения об аннулировании.

Полученный XML-файл нужно передать в поле ``RevocationRequests`` структуры ``MessagePatchToPost``.


Отказ от подписи и отказ от предложения об аннулировании
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Сгенерировать отказ можно с помощью метода :doc:`../http/GenerateSignatureRejectionXml`. В ответе метод вернет сформированный XML-файл отказа.

Полученный XML-файл нужно передать в поле ``XmlSignatureRejections`` структуры ``MessagePatchToPost``.


Уведомление об уточнении счета-фактуры
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Чтобы создать запрос на исправление или корректировку счета-фактуры, сгенерируйте и отправьте уведомление об уточнении.

Сгенерировать уведомление об уточнении можно с помощью метода :doc:`../http/GenerateInvoiceCorrectionRequestXml`. В ответе метод вернет сформированный XML-файл уведомления.

Полученный XML-файл нужно передать в поле ``CorrectionRequests`` структуры ``MessagePatchToPost``.
