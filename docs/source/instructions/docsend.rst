Отправка документов
===================

.. contents:: :local:

Работать с документами можно только внутри :doc:`сообщения <../entities/message>`.

Генерация формализованного документа
------------------------------------

Через Диадок можно отправить как формализованные, так и неформализованные документы. Неформализованные документы могут быть представлены в любом формате. Формализованные документы должны представлять собой XML-файлы в формате, рекомендованном ФНС.

Вы можете сформировать формализованный документ самостоятельно или с помощью метода :doc:`../http/GenerateTitleXml`. Для этого в метод ``GenerateTitleXml`` нужно передать следующие параметры:

- ``documentTypeNamedId`` — тип документа;
- ``documentFunction`` — функция документа;
- ``documentVersion`` — версия документа;
- ``titleIndex`` — идентификатор титула документа.

Получить тип, функцию, версию, идентификатор титула и ссылку на скачивание XSD-схемы можно с помощью метода :doc:`../http/GetDocumentTypes`. В ответе метод возвращает описание всех типов документов, доступных в ящике.

В теле запроса метода ``GenerateTitleXml`` нужно передать XML-файл ``UserDataXsd``, соответствующий XSD-схеме. ``UsedDataXsd`` содержит информацию для генерации титула, которую может заполнить только пользователь.

Метод ``GenerateTitleXml`` вернет в ответе XML-файл титула, сгенерированный в соответствии с указанной XSD-схемой. Полученный файл можно подготовить к подписанию и отправить как формализованный документ или сохранить как черновик и отправить позже.

.. _doc_prepare_to_sign:

Подготовка документа к подписанию
---------------------------------

Метод :doc:`../http/PrepareDocumentsToSign` позволяет автоматически добавить в XML-файл информацию о подписанте. К подписанию можно подготовить :doc:`черновик<../entities/draft>`, незагруженный в Диадок формализованный документ или :ref:`неотправленный исходящий документ<doc_delaysend>`. Дополнить можно только первый титул документа, второй титул генерируется сразу со всеми данными. 

Кроме данных подписанта в файл можно добавить:

	- версию формата и программы,
	- дату и время формирования файлов,
	- идентификатор файла.

Данные подписанта, в зависимости от его типа, можно указать в структурах :doc:`../proto/Signer` или :doc:`../proto/ExtendedSigner` или в поле ``SignerContent``. Чтобы определить тип подписанта, используйте метод :doc:`../http/GetDocumentTypes`, тип подписанта вернется в поле ``SignerType`` структуры :doc:`SignerInfoV2 <../proto/DocumentTypeDescriptionV2>`.

В зависимости от типа подписанта заполните его следующим образом:

	- простой подписант — при вызове метода ``PrepareDocumentsToSign`` заполните структуру ``Signer``.
	- расширенный подписант — при вызове метода ``PrepareDocumentsToSign`` заполните структуру ``ExtendedSigner``.
	- универсальный подписант — передайте бинарное представление упрощенного XML-файла подписанта в поле ``SignerContent``. Чтобы подготовить упрощенный XML-файл подписанта, выполните следующие действия: 

		1. С помощью метода ``GetDocumentTypes`` получите URL-путь метода, возвращающего файл XSD-схемы упрощенного XML подписанта. URL-путь возвращается в поле ``SignerUserDataXsdUrl``.
		2. С помощью URL-пути вызовите метод :doc:`../http/GetContent`. В ответ метод вернет файл XSD-схемы SignerUserData.xsd.
		3. По полученной схеме подготовьте упрощенный XML-файл подписанта одним из следующих способов:
		
			- используйте кодогенерацию в SDK;
			- вручную укажите все данные для блока Подписант в упрощенном XML-файле;
			- укажите в файле данные, по которым Диадок сможет дополнить информацию, например, идентификатор ящика организации, отпечаток сертификата, регистрационный номер МЧД и ИНН доверителя. Диадок по переданным данным заполнит блок Подписант.

В ответе метод ``PrepareDocumentsToSign`` возвращает список документов, подготовленных к подписанию и отправке.

Пример сформированного в соответствии с :download:`XSD-схемой <../xsd/UniversalSignerForPatch.xsd>` подписанта для УПД 970 формата:

::

    <?xml version="1.0" encoding="Windows-1251"?>
    <Signers>
        <Signer SignatureType="1" SignerPowersConfirmationMethod="3" SigningDate="21.01.2024">
            <Certificate CertificateThumbprint="0e097989b91332008c052b5da5a7dd6424e6c2ac"/>
            <Fio FirstName="Петр" LastName="Петров" MiddleName="Петрович"/>
            <Position PositionSource="Manual">Подписант-Должн</Position>
            <SignerAdditionalInfo SignerAdditionalInfoSource="Manual">Подписант-ДопСведПодп</SignerAdditionalInfo>
            <PowerOfAttorney>
            <Electronic>
                <Manual RegistrationNumber="4a743152-e772-4249-9a47-e2e290258e79" RegistrationDate="17.09.2018" InternalNumber="123" InternalDate="18.09.2018" SystemId="СвДоверЭл-ИдСистХран" SystemUrl="СвДоверЭл-УРЛСист"/>
            </Electronic>
            </PowerOfAttorney>
        </Signer>
    </Signers>

- ``SignerStatus`` — статус подписанта, может принимать значения:

	- 1 — лицо, имеющее полномочия на подписание документа без доверенности,
	- 2 — лицо, имеющее полномочия на подписание документа на основании доверенности в электронной форме,
	- 3 — лицо, имеющее полномочия на подписание документа на основании доверенности на бумажном носителе.

- ``SignatureType`` — тип подписи, может принимать значения:

	- 1 — усиленная квалифицированная электронная подпись,
	- 2 — простая электронная подпись,
	- 3 — усиленная неквалифицированная электронная подпись.

- ``SignerPowersConfirmationMethod`` — способ подтверждения полномочий представителя на подписание документа. Используется для документов формата №970. Может принимать значения:

	- 1 — в соответствии с данными, содержащимися в электронной подписи,
	- 2 — в соответствии с доверенностью в электронной форме в машиночитаемом виде, если представление доверенности осуществляется посредством включения в каждый пакет электронных документов, подписываемых представителем,
	- 3 — в соответствии с доверенностью в электронной форме в машиночитаемом виде, если представление доверенности осуществляется из информационной системы. При этом необходимая информация для запроса доверенности из информационной системы, указана в электронном документе,
	- 4 — в соответствии с доверенностью в электронной форме в машиночитаемом виде, если представление доверенности осуществляется из информационной системы. При этом необходимая информация для запроса доверенности из информационной системы, представляется способом, отличным от указания в электронном документе,
	- 5 — в соответствии с доверенностью в форме документа на бумажном носителе,
	- 6 — иное.

- ``SigningDate`` — дата подписания документа.
- ``Certificate`` — данные сертификата подписанта. Обязательное поле. Можно передать:

	- ``CertificateThumbprint`` — отпечаток сертификата,
	- ``CertificateBytes`` — сертификат, сериализованный в массив байтов в DER-кодировке.

- ``Position`` — должность подписанта.
- ``PositionSource`` — способ заполнения должности сотрудника:

	- ``Employee`` — заполнение из данных сотрудника в Диадоке,
	- ``Certificate`` — заполнение из данных в сертификате,
	- ``StorageByTitleTypeId`` — заполнение из данных, сохраненных с помощью метода :doc:`../http/ExtendedSignerDetailsV2` для указанного сертификата и ``documentTitleType``,
	- ``Manual`` — ручное заполнение данных.

- ``SignerAdditionalInfo`` — дополнительные сведения о подписанте.
- ``SignerAdditionalInfoSource`` — способ заполнения дополнительных сведений, может принимать значения:

	- ``StorageByTitleTypeId`` — заполнение из данных, сохраненных с помощью метода :doc:`../http/ExtendedSignerDetailsV2` для указанного сертификата и ``documentTitleType``,
	- ``Manual`` — ручное заполнение данных.

- ``PowerOfAttorney`` — сведения о машиночитаемой доверенности. Доверенность может быть электронной или бумажной.

	- ``Electronic`` — электронная доверенность. Данные доверенности можно заполнить автоматически или вручную.

			- ``MethodOfProviding`` — способ представления доверенности. Обязательное поле. Может принимать значения:

			- 1 — представление доверенности осуществляется посредством ее включения в пакет электронных документов,
			- 2 — представление доверенности способом, не предусматривающим его включение в пакет электронных документов.

		- ``Storage`` — автоматическое заполнение информации по доверенности на основе номера и ИНН:

			- ``RegistrationNumber`` — номер доверенности, обязательное поле,
			- ``IssuerInn`` — ИНН организации, выдавшей доверенность, обязательное поле,
			- ``UseDefault`` — флаг, указывающий, нужно ли автоматически заполнить информацию на основе доверенности, используемой сотрудником по умолчанию. Обязательное поле.

		- ``Manual`` — ручное заполнение данных доверенности. Можно указать следующие данные:

			- ``RegistrationNumber`` — номер доверенности,
			- ``RegistrationDate`` — дата совершения (выдачи) доверенности,
			- ``InternalNumber`` — внутренний регистрационный номер доверенности,
			- ``InternalDate`` — дата внутренней регистрации доверенности,
			- ``SystemId`` — идентифицирующая информация об информационной системе, в которой осуществляется хранение доверенности.

	- ``Paper`` — бумажная доверенность. Можно указать следующие данные:

		- ``Fio`` — фамилия, имя, отчество (при наличии) лица, подписавшего доверенность,
		- ``InternalNumber`` — внутренний регистрационный номер доверенности, обязательное поле,
		- ``RegistrationDate`` — дата совершения (выдачи) доверенности, обязательное поле,
		- ``IssuerInfo`` — сведения о доверителе.

.. _doc_send:

Отправка сообщения
------------------

Подписать и отправить исходящие сообщения можно с помощью метода :doc:`../http/PostMessage`.
Обратите внимание, что API Диадока не создает :doc:`файл подписи <../entities/signature>`, его нужно сгенерировать самостоятельно.

В теле запроса метода нужно передать структуру :doc:`../proto/MessageToPost`. Структура должна содержать идентификаторы ящиков участников документооборота и набор отправляемых документов:

	- укажите идентификатор ящика отправителя в поле ``FromBoxId``. Можно указать только тот ящик, к которому у пользователя есть доступ с текущим авторизационным токеном;
	- укажите идентификатор ящика получателя в поле ``ToBoxId``;
	- используйте вложенную структуру ``DocumentAttachment`` для передачи XML-файла:

		- XML-файл передайте в поле ``Content`` структуры ``SignedContent``;
		- подпись перейдайте в поле ``Signature`` структуры ``SignedContent``;
		- укажите тип документа в поле ``TypeNamedId``;
		- укажите функцию документа в поле ``Function``;
		- укажите версию документа в поле ``Version``.

	- передать машиночитаемую доверенность (МЧД) можно во вложенной структуре :doc:`../proto/PowerOfAttorneyToPost`. Это можно сделать следующими способами:

		- указать регистрационный номер МЧД в формате GUID в поле ``RegistrationNumber`` и ИНН доверителя в поле ``IssuerInn`` вложенной структуры :doc:`../proto/PowerOfAttorneyFullId`;
		- использовать флаг ``UseDefault = true``, если у пользователя установлена МЧД по умолчанию;
		- передать файл доверенности и подпись к ней во вложенной структуре ``Contents``. Файл передается в поле ``Content``, подпись — в поле ``Signature``.

Пример заполнения структуры ``MessageToPost``:

::

    "FromBoxId": "db32772b-9256-49a8-a133-fda593fda38a",
    "ToBoxId": "13254c42-b4f7-4fd3-3324-0094aeb0f15a",
    "DocumentAttachments": [
            {
                "SignedContent":
                {
                    "Content": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0...NC50Ls+",        //контент xml-файла в кодировке base-64
                    "Signature": "MIIN5QYJKoZIhvcNAQcCoIIN1jCCDdIA...kA9MJfsplqgW",       //контент файла подписи в кодировке base-64
                    {
                        "PowerOfAttorney":
                            "FullId":
                           {
                                "RegistrationNumber": "регистрационный номер МЧД",
                                "IssuerInn": "ИНН доверителя"
                            },
                    },
                },
                "TypeNamedId": "тип документа",
                "Function": "функция документа",
                "Version": "версия документа"
            }
        ]
    }

После вызова метода :doc:`../http/PostMessage` в ящике отправителя формируется:

	- цепочка документооборота и информация о связанных с ней документах,
	- событие о появлении сообщения.

В ящике получателя эта информация появится с некоторой задержкой: это связано с асинхронной передачей информации из ящика отправителя в ящик получателя. То есть успешный вызов метода :doc:`../http/PostMessage` гарантирует лишь появление исходящего сообщения в ящике отправителя.

Не отправляйте формализованные документы размером более 3 Мб. Это может увеличить время обработки документа и завершиться ошибкой.

Если размер отправляемого документа больше 500 Кб, рекомендуем использовать :doc:`полку документов <../entities/shelf>`.

.. _doc_delaysend:

Отложенная отправка
-------------------

Когда нужно сохранить исходящий документ без отправки, чтобы подписать и отправить его позже, используйте **отложенную отправку**.
Это может быть полезно, если:

	- документы перед отправкой нужно согласовать с другими сотрудниками;
	- документ перед отправкой нужно дополнить данными, как в случае с :doc:`маркированными товарами <../howto/marking_ttgis>`;
	- когда документ был создан с помощью интеграционного решения, а подпись и отправка будет осуществляться из веб-сервиса.

Чтобы сохранить документ без отправки, используйте функцию **отложенной отправки**.
Для этого в структуре :doc:`../proto/MessageToPost` установите флаг ``DelaySend``. При вызове метода :doc:`../http/PostMessage` документ с этим флагом будет сохранен в разделе исходящих документов. Такой документ называется **исходящим неотправленным документом**.

Если перед отправкой нужно отредактировать документ, используйте :ref:`настройки редактирования <editing_settings>`. Для этого в поле ``MessageToPost.DocumentAttachment.EditingSettingId`` укажите значение идентификатора настройки редактирования, полученного у вашего менеджера.

Чтобы согласовать исходящий неотправленный документ, используйте метод :doc:`../http/PostMessagePatch`. Исходящий неотправленный документ можно подписать несколькими :ref:`согласующими подписями <resolution_signature>`.

Если никаких действий с документом больше не требуется, его можно подписать и отправить с помощью метода :doc:`../http/PostMessagePatch`. Подписание неотправленного документа :doc:`основной подписью <../entities/signature>` равносильно его отправке.
	
Исходящий неотправленный документ можно найти с помощью метода :doc:`../http/GetDocuments`. Для этого в запросе используйте фильтр ``DocumentStatus = WaitingForSenderSignature``.

У исходящего неотправленного документ есть ограничения:

- под таким документом не может быть подписи или запроса на подпись по доверенности,
- нельзя изменить содержимое документа и реквизиты получателя, за исключением документов с :ref:`настройками редактирования <editing_settings>`.

Отличия исходящего неотправленного документа от других сущностей приведено в :ref:`таблице <template_draft_delaysend>`.

.. _doc_draft:

Создание черновика
------------------

Метод :doc:`../http/PostMessage` можно использовать для создания :doc:`черновиков <../entities/draft>` — сообщений, содержащих документы без подписей к ним.

Чтобы создать черновик, укажите флаг ``IsDraft`` в структуре :doc:`../proto/MessageToPost` при создании сообщения. Такое сообщение будет загружено на сервер, но задание на отправку сообщения получателю формироваться не будет.

Для формирования подписей к документам и отправки сообщения на основе черновика используйте метод :doc:`../http/SendDraft`.

.. _template_draft_delaysend:

Шаблон, черновик или неотправленный документ
--------------------------------------------

Используйте :doc:`шаблон <../entities/template>`, :doc:`черновик <../entities/draft>` или :ref:`исходящий неотправленный документ <doc_delaysend>` в подходящих для этого сценариях. Ниже в таблице приведены различия этих сущностей.

.. table:: Различия черновика, шаблона и исходящего неотправленного документа

	+---------------------------------+-----------------------------------------------------+---------------------------------------+----------------------------------------------------+
	|                                 | Шаблон                                              | Черновик                              | Исходящий неотправленный документ                  |
	+=================================+=====================================================+=======================================+====================================================+
	| Свойства                        | Сообщение без подписей. На его основе можно создать | «Заготовка» документа, т.е. сущность, | Уже готовый к отправке документ, сохраненный в     |
	|                                 | один или несколько документов — в зависимости от    | на основе которой можно создать один  | разделе «Исходящие».                               |
	|                                 | настроек.                                           | документ.                             | Имеет статус «Требуется подписать и отправить».    |
	|                                 | С шаблоном можно работать в своем ящике или         |                                       |                                                    |
	|                                 | отправить контрагенту.                              |                                       |                                                    |
	+---------------------------------+-----------------------------------------------------+---------------------------------------+----------------------------------------------------+
	| Где хранится                    | в ящике отправителя или получателя                  | в ящике отправителя                   | в ящике отправителя                                |
	+---------------------------------+-----------------------------------------------------+---------------------------------------+----------------------------------------------------+
	| Можно ли редактировать перед    | да, если указаны                                    | нет                                   | да, если указаны                                   |
	| отправкой                       | :ref:`настройки редактирования <editing_settings>`  |                                       | :ref:`настройки редактирования <editing_settings>` |
	+---------------------------------+-----------------------------------------------------+---------------------------------------+----------------------------------------------------+
	| Что будет после отправки        | в зависимости от настроек:                          | черновик будет удален                 | будет отправлен контрагенту                        |
	|                                 |                                                     |                                       |                                                    |
	|                                 | - если шаблон одноразовый, то он будет удален       |                                       |                                                    |
	|                                 |   после создания документа;                         |                                       |                                                    |
	|                                 | - если шаблон многоразовый, то он продолжит         |                                       |                                                    |
	|                                 |   существовать после создания документа.            |                                       |                                                    |
	+---------------------------------+-----------------------------------------------------+---------------------------------------+----------------------------------------------------+

Дополнение сообщения
--------------------

Сформированные сообщения можно дополнять :doc:`служебными документами <docservice>` и титулами последующих участников с помощью метода :doc:`../http/PostMessagePatch`, в который передается структура :doc:`../proto/MessagePatchToPost`. Эта структура должна содержать идентификатор :doc:`ящика <../entities/box>`, хранящего сообщение, и идентификатор цепочки документооборота, которую нужно дополнить новым документом.
Пользователь, вызывающий метод, должен иметь доступ к ящику, в котором хранится сообщение.

Пример заполнения структуры :doc:`../proto/MessagePatchToPost`:

::

    "BoxId": "db32772b-9256-49a8-a133-fda593fda38a",
    "MessageId": "bbcedb0d-ce34-4e0d-b321-3f600c920935",
    "RecipientTitles": [
            {
                "ParentEntityId":"30cf2c07-7297-4d48-bc6f-ca7a80e2cf95&",
                "SignedContent":
                {
                    "Content": "PD94bWwgdmVyc2l...LDQudC7Pg==",        //контент xml-файла в кодировке base-64
                    "Signature": "MIIN5QYJKoZIhvc...KsTM6zixgz"        //контент файла подписи в кодировке base-64
                }
            }
        ]
    }

В результате работы метода сообщение будет обновлено в ящиках всех участников документооборота. В ящике получателя обновление может произойти с задержкой.