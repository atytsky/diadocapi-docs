Работа с документами
====================

.. contents:: :local:

Работать с документами можно только внутри :doc:`сообщения <entities/message>`.

.. note::

	В большинстве методов нужно передавать ключ разработчика и авторизационный токен в заголовке ``Authorization``. Самые распространенные способы получения токена — по сертификату или по логину и паролю. Токен действует 24 часа. :doc:`Подробнее <../Authorization>` про авторизацию в Диадоке.

Генерация xml
-------------

Формализованный документ для отправки можно сформировать как на стороне интеграционного решения, так и с помощью метода :doc:`../http/GenerateTitleXml`.

	Для генерации XML-файла документа методом :doc:`../http/GenerateTitleXml` понадобятся:

		- ``documentTypeNamedId`` — тип документа;
		- ``documentFunction`` — функция документа;
		- ``documentVersion`` — версия документа;
		- ``titleIndex`` — идентификатор титула документа.

	В теле запроса нужно передать XML-файл ``UserDataXsd``, соответствующий XSD-схеме. ``UsedDataXsd`` содержит информацию для генерации титула, которую может заполнить только пользователь.

Получить тип, функцию, версию, идентификатор титула и ссылку на скачивание XSD-схемы можно с помощью метода :doc:`../http/GetDocumentTypes`. В ответе метод возвращает описание всех типов документов, доступных в ящике.

.. _doc_send:

Отправка документа
------------------

Отправить документы можно с помощью метода :doc:`../http/PostMessage`. Формирование подписи происходит на стороне интеграционного решения. В теле запроса метода нужно передать структуру :doc:`../proto/MessageToPost`. Структура должна содержать идентификаторы ящиков участников документооборота и набор отправляемых документов:

	- в поле ``FromBoxId`` укажите идентификатор ящика отправителя. Можно указать только тот ящик, к которому у пользователя есть доступ с текущим авторизационным токеном;
	- в поле ``ToBoxId`` укажите идентификатор ящика получателя;
	- для передачи XML-файла используйте вложенную структуру ``DocumentAttachment``:

		- XML-файл передайте в структуре ``SignedContent`` в поле ``Content``, подпись — в поле ``Signature``;
		- ``TypeNamedId`` — тип документа;
		- ``Function`` — функция документа;
		- ``Version`` — версия документа.
	- передать машиночитаемую доверенность (МЧД) можно во вложенной структуре :doc:`../proto/PowerOfAttorneyToPost`. Это можно сделать тремя способами:

		- указать во вложенной структуре :doc:`../proto/PowerOfAttorneyFullId` регистрационный номер МЧД в формате GUID в поле ``RegistrationNumber`` и ИНН доверителя в поле ``IssuerInn``;
		- использовать флаг ``UseDefault=true``, если у пользователя установлена МЧД по умолчанию;
		- передать файл доверенности и подпись к ней во вложенной структуре ``Contents``. Файл передается в поле ``Content``, подпись — в поле ``Signature``.

Пример заполнения структуры ``MessageToPost``:

::

    "FromBoxId": "db32772b-9256-49a8-a133-fda593fda38a",
    "ToBoxId": "13254c42-b4f7-4fd3-3324-0094aeb0f15a",
    "DocumentAttachments": [
            {
                "SignedContent":
                {
                    "Content": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0...NC50Ls+",        //контент xml-файла в кодировке base-64
                    "Signature": "MIIN5QYJKoZIhvcNAQcCoIIN1jCCDdIA...kA9MJfsplqgW",       //контент файла подписи в кодировке base-64
                    "FullId":
                    {
                        "RegistrationNumber": "регистрационный номер МЧД",
                        "IssuerInn": "ИНН доверителя"
                    },
                },
                "TypeNamedId": "тип документа",
                "Function": "функция документа",
                "Version": "версия документа"
            }
        ]
    }

После вызова метода :doc:`../http/PostMessage` в ящике отправителя формируется:

	- цепочка документооборота и информация о связанных с ней документах,
	- событие о появлении сообщения.

В ящике получателя эта информация появится с некоторой задержкой: это связано с асинхронной передачей информации из ящика отправителя в ящик получателя. То есть успешный вызов метода :doc:`../http/PostMessage` гарантирует лишь появление исходящего сообщения в ящике отправителя.

Не отправляйте формализованные документы размером более 3 Мб. Это может увеличить время обработки документа и завершиться ошибкой.

Если размер отправляемого документа больше 500 Кб, рекомендуем использовать :doc:`полку документов <../entities/shelf>`.

.. _doc_draft:

Создание черновика
~~~~~~~~~~~~~~~~~~

Метод :doc:`http/PostMessage` можно использовать для создания :doc:`черновиков <entities/draft>` — сообщений, содержащих документы без подписей к ним.

Чтобы создать черновик, укажите флаг ``IsDraft`` в структуре :doc:`proto/MessageToPost` при создании сообщения. Такое сообщение будет загружено на сервер, но задание на отправку сообщения получателю формироваться не будет.

Для формирования подписей к документам и отправки сообщения на основе черновика используйте метод :doc:`http/SendDraft`.

.. _doc_delaysend:

Отложенная отправка
~~~~~~~~~~~~~~~~~~~

Когда нужно сохранить исходящий документ без отправки, чтобы подписать и отправить его позже, используйте **отложенную отправку**.
Это может быть полезно, если:

	- документы перед отправкой нужно согласовать с другими сотрудниками;
	- документ перед отправкой нужно дополнить данными, как в случае с :doc:`маркированными товарами <howto/marking_ttgis>`;
	- когда документ был создан с помощью интеграционного решения, а подпись и отправка будет осуществляться из веб-сервиса.

Чтобы сохранить документ без отправки, используйте функцию **отложенной отправки**.
Для этого в структуре :doc:`proto/MessageToPost` установите флаг ``DelaySend``. При вызове метода :doc:`http/PostMessage` документ с этим флагом будет сохранен в разделе исходящих документов. Такой документ называется **исходящим неотправленным документом**.

Если перед отправкой нужно отредактировать документ, используйте :ref:`настройки редактирования <editing_settings>`. Для этого в поле ``MessageToPost.DocumentAttachment.EditingSettingId`` укажите значение идентификатора настройки редактирования, полученного у вашего менеджера.

Чтобы согласовать исходящий неотправленный документ, используйте метод :doc:`http/PostMessagePatch`. Если никаких действий с документом больше не требуется, его можно подписать и отправить с помощью метода :doc:`http/PostMessagePatch`.
	
Исходящий неотправленный документ можно найти с помощью метода :doc:`http/GetDocuments`. Для этого в запросе используйте фильтр ``DocumentStatus = WaitingForSenderSignature``.

Отличия исходящего неотправленного документа от других сущностей приведено в :ref:`таблице <template_draft_delaysend>`.

У исходящего неотправленного документ есть ограничения:

- под таким документом не может быть подписи или запроса на подпись по доверенности,
- нельзя изменить содержимое документа и реквизиты получателя, за исключением документов с :ref:`настройками редактирования <editing_settings>`.


.. _template_draft_delaysend:

Шаблон, черновик или неотправленный документ
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Используйте :doc:`шаблон <entities/template>`, :doc:`черновик <entities/draft>` или :ref:`исходящий неотправленный документ <doc_delaysend>` в подходящих для этого сценариях. Ниже в таблице приведены различия этих сущностей.

.. table:: Различия черновика, шаблона и исходящего неотправленного документа

	+---------------------------------+-----------------------------------------------------+---------------------------------------+----------------------------------------------------+
	|                                 | Шаблон                                              | Черновик                              | Исходящий неотправленный документ                  |
	+=================================+=====================================================+=======================================+====================================================+
	| Свойства                        | Сообщение без подписей. На его основе можно создать | «Заготовка» документа, т.е. сущность, | Уже готовый к отправке документ, сохраненный в     |
	|                                 | один или несколько документов — в зависимости от    | на основе которой можно создать один  | разделе «Исходящие».                               |
	|                                 | настроек.                                           | документ.                             | Имеет статус «Требуется подписать и отправить».    |
	|                                 | С шаблоном можно работать в своем ящике или         |                                       |                                                    |
	|                                 | отправить контрагенту.                              |                                       |                                                    |
	+---------------------------------+-----------------------------------------------------+---------------------------------------+----------------------------------------------------+
	| Где хранится                    | в ящике отправителя или получателя                  | в ящике отправителя                   | в ящике отправителя                                |
	+---------------------------------+-----------------------------------------------------+---------------------------------------+----------------------------------------------------+
	| Можно ли редактировать перед    | да, если указаны                                    | нет                                   | да, если указаны                                   |
	| отправкой                       | :ref:`настройки редактирования <editing_settings>`  |                                       | :ref:`настройки редактирования <editing_settings>` |
	+---------------------------------+-----------------------------------------------------+---------------------------------------+----------------------------------------------------+
	| Что будет после отправки        | в зависимости от настроек:                          | черновик будет удален                 | будет отправлен контрагенту                        |
	|                                 |                                                     |                                       |                                                    |
	|                                 | - если шаблон одноразовый, то он будет удален       |                                       |                                                    |
	|                                 |   после создания документа;                         |                                       |                                                    |
	|                                 | - если шаблон многоразовый, то он продолжит         |                                       |                                                    |
	|                                 |   существовать после создания документа.            |                                       |                                                    |
	+---------------------------------+-----------------------------------------------------+---------------------------------------+----------------------------------------------------+


Патчинг документа
~~~~~~~~~~~~~~~~~

Добавить в xml-файл информацию о подписанте можно с помощью метода :doc:`../http/PrepareDocumentsToSign`. :doc:`Подробнее <../MiscellaneousApiFeatures>` о патчинге документов.


Чтение ленты событий
--------------------

Хранящаяся в ящике информация не может быть изменена: она может быть только дополнена. Все модификации ящика упорядочиваются хронологически. Эти модификации в Диадоке называются событиями.

События соответствуют изменениям, произошедшим в ящике, и бывают двух видов:

	- событие о формировании новой цепочки документооборота;
	- событие о добавлении документа к уже существующей цепочки документооборота.

Чтобы получить информацию о новых событиях, используйте метод :doc:`../http/GetNewEvents`. Этот метод возвращает хронологически упорядоченный список всех событий :doc:`../proto/BoxEvent`, произошедших в указанном ящике. Метод возвращает только информацию об изменениях в ящике, содержимое документов в ответе не возвращается. Метод может фильтровать изменения в ящике по: подразделению, типу сообщения, типу документа, направлению документа и контрагенту.

Получение документов
--------------------

Получить документы можно с помощью следующих методов:

	- :doc:`../http/GetDocuments` — позволяет получить список документов, удовлетворяющих заданным фильтрам.
	- :doc:`../http/GetDocument` — позволяет получить всю информацию о документе по его идентификатору.

В методе :doc:`../http/GetDocuments` можно получить список определенных документов. Отфильтровать документы можно по:

	- типу (счет-фактура, акт сверки, акт ТОРГ-2 и т.д.), классу (входящие, исходящие, внутренние, отправленные через промежуточного получателя) и статусу. Для этого используйте параметр ``filterCategory``;
	- контрагенту, для этого используйте параметр ``counteragentBoxId``;
	- подразделению. Для фильтрации по подразделению отправителя используйте параметр ``fromDepartmentId``, по подразделению получателя — ``toDepartmentId``;
	- времени или дате отправки или получения. Параметры ``timestampFromTicks`` и ``timestampToTicks`` задают интервал, в котором должна находиться метка времени документа. Параметры ``fromDocumentDate`` и ``toDocumentDate`` задают интервал, в котором должен находиться реквизит «Дата документа».

В теле ответа вернется список документов в виде структуры ``DocumentList`` с вложенной структурой ``Document``. Метод :doc:`../http/GetDocuments` не возвращает содержимое документов — только информацию о них. Контент документов можно получить с помощью методов :doc:`../http/GetDocument` или :doc:`../http/GetMessage`. Для этого потребуются значения полей ``MessageId`` и ``EntityId`` из структуры ``Document``, которую возвращает метод :doc:`../http/GetDocuments`.

Создание служебных документов
-----------------------------

В Диадоке можно сгенерировать следующие ответные документы:

	- извещение о получении (ИоП),
	- предложение об аннулировании,
	- отказ от подписи,
	- отказ от предложения об аннулировании,
	- уведомление об уточнении счета-фактуры (УоУ).

Извещение о получении
~~~~~~~~~~~~~~~~~~~~~

Сгенерировать извещение о получении ИоП можно с помощью метода :doc:`../http/GenerateReceiptXml`. Для генерации нужен идентификатор документа ``AttachmentId``, на который формируется ИоП, идентификатор сообщения ``MessageId``, в котором отправлен документ, и xml-файл универсального подписанта, сформированный в соответствии с XSD-схемой.

В ответе метод вернет сформированный XML-файл извещения.

Предложение об аннулировании
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Сгенерировать предложение об аннулировании можно с помощью метода :doc:`../http/GenerateRevocationRequestXml`. Для генерации нужен идентификатор документа ``AttachmentId``, на который формируется предложение об аннулировании, и идентификатор сообщения ``MessageId``. Можно отправить предложение об аннулировании форматов 1.01 и 1.02. При генерации можно указать комментарий и указать данные подписанта.

В ответе метод вернет сформированный XML-файл предложения об аннулировании.

Отказ от подписи и отказ от предложения об аннулировании
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Сгенерировать отказ можно с помощью метода :doc:`../http/GenerateSignatureRejectionXml`. Для генерации нужен идентификатор документа ``AttachmentId``, на который формируется отказ, идентификатор сообщения ``MessageId``, в котором отправлен документ, и xml-файл универсального подписанта, сформированный в соответствии с XSD-схемой. Можно указать комментарий к отказу длиной не более 5000 символов.

В ответе метод вернет сформированный XML-файл отказа.

Уведомление об уточнении счета-фактуры
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Сгенерировать уведомление об уточнении можно с помощью метода :doc:`../http/GenerateInvoiceCorrectionRequestXml`. Для генерации нужен идентификатор документа ``AttachmentId``, на который формируется ИоП, идентификатор сообщения ``MessageId``, в котором отправлен документ, и xml-файл универсального подписанта, сформированный в соответствии с XSD-схемой. Также обязательно нужно написать текст уведомления  длиной не более 20000 символов.

В ответе метод вернет сформированный XML-файл уведомления.

Отправка служебных документов
-----------------------------

Сформированные сообщения можно дополнять служебными документами с помощью метода :doc:`../http/PostMessagePatch`, в который передается структура :doc:`../proto/MessagePatchToPost`. Эта структура должна содержать идентификатор ящика, хранящего сообщение, и идентификатор цепочки документооборота, которую нужно дополнить новым документом. Пользователь, вызывающий метод, должен иметь доступ к ящику, в котором хранится сообщение.

Пример заполнения структуры :doc:`../proto/MessagePatchToPost`:

::

    "BoxId": "db32772b-9256-49a8-a133-fda593fda38a",
    "MessageId": "bbcedb0d-ce34-4e0d-b321-3f600c920935",
    "RecipientTitles": [
            {
                "ParentEntityId":"30cf2c07-7297-4d48-bc6f-ca7a80e2cf95&",
                "SignedContent":
                {
                    "Content": "PD94bWwgdmVyc2l...LDQudC7Pg==",        //контент xml-файла в кодировке base-64
                    "Signature": "MIIN5QYJKoZIhvc...KsTM6zixgz"        //контент файла подписи в кодировке base-64
                }
            }
        ]
    }

В результате работы метода сообщение будет обновлено в ящиках всех участников документооборота. В ящике получателя обновление может произойти с задержкой.

Парсинг документа
-----------------

Метод парсинга позволяет получить из xml-файла документа упрощенный xml ``UserDataXml``. Парсинг документа можно использовать, например, чтобы получить данные из предыдущих титулов для генерации титулов последующих участников или чтобы загрузить данные из него в свою учетную систему. Распарсить документ можно с помощью метода :doc:`../http/ParseTitleXml`.

Для парсинга нужны тип, функция, версия и идентификатор титула. Их можно узнать из ответов методов :doc:`../http/GetNewEvents`, :doc:`../http/GetMessage`, :doc:`../http/GetDocument`, :doc:`../http/GetDocflowEvents_V3`, :doc:`../http/GetDocflows_V3`. Также можно получить информацию по xml-файлу титула с помощью метода :doc:`../http/DetectDocumentTitles`: для этого в теле запроса метода передайте бинарное содержимое документа.